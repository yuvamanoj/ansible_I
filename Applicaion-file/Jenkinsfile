def image
def imageTag
def version
def fullVersion
def chartVersion
pipeline {
  agent any

  options {
    buildDiscarder(logRotator(daysToKeepStr: '7', artifactDaysToKeepStr: '7'))
  }


  environment {
    REPOSITORY_NAME = "${env.GIT_URL.tokenize('/')[3].split('\\.')[0]}"
    REPOSITORY_OWNER = "${env.GIT_URL.tokenize('/')[2]}"
    GIT_SHORT_REVISION = "${env.GIT_COMMIT[0..7]}"
    DOCKER_SERVER = "${env.MSS_DOCKER_SERVER_PRD}"
    DOCKER_CREDENTIALS = 'mss-docker-registry-prd-credentials'
    NODEJS_HOME = tool('nodejs-12.16.3')
	OC_HOME = tool name: 'oc', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
    PATH = "$NODEJS_HOME/bin:$OC_HOME/oc/bin:$PATH"
  }

  stages {

    stage('Checkout') {
      steps {
        deleteDir()
        checkout scm
      }
    }

    stage('Generator Version Update Check') {
      steps {
        script {
          warnError('Generator Last Run Version is Outdated') {
            withCredentials([usernamePassword(credentialsId: 'mss-artifactory-credentials', usernameVariable: 'ARTIFACTORY_USERNAME', passwordVariable: 'ARTIFACTORY_PASSWORD')]) {
              sh '''#!/bin/bash
				mkdir -p yo_update
                cd yo_update
				ls -lrth && pwd
				wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz         
				tar -xvzf openshift-client-linux.tar.gz
				ls -lrth && pwd
				oc version
				oc login --token=sha256~7nxZTuyY8JzJy5vGv2FyGhmuzY6Tb_H4ixHhmIcYBlk --server=https://api.dal09-dev-ocp-01.cl.sec.ibm.com:6443
				oc project xpp
				# cd /opt/jenkins/workspace/d-security_tab-pcc-oc-chart_test
				# ls -lrth
				sudo yum update
				sudo yum install python3
				python3 -V
				sudo yum install python3-pip
				pip3 install ansible --user
				subscription-manager repos --enable ansible-2.8-for-rhel-8-x86_64-rpms
				yum -y install ansible
				ansible --version
				# cd /opt/jenkins/workspace/d-security_tab-pcc-oc-chart_test
				ls -lrth /opt/jenkins/workspace/d-security_tab-pcc-oc-chart_test
				ansible-playbook /opt/jenkins/workspace/d-security_tab-pcc-oc-chart_test/ansible_install.yml -e 'ansible_python_interpreter=/usr/bin/python3 custId=aubhlocal_1625731030965 projPath=aubhlocal_1625731030965_installation_prisma'
				npm init --force > /dev/null
                npm config set @mss:registry https://na.artifactory.swg-devops.com/artifactory/api/npm/mss-npm/  --userconfig ./.npmrc
                npm config set //na.artifactory.swg-devops.com/artifactory/api/npm/mss-npm/:_password="$(printf ${ARTIFACTORY_PASSWORD} | base64)"  --userconfig ./.npmrc
                npm config set //na.artifactory.swg-devops.com/artifactory/api/npm/mss-npm/:username="${ARTIFACTORY_USERNAME}"  --userconfig ./.npmrc
                npm config set //na.artifactory.swg-devops.com/artifactory/api/npm/mss-npm/:email="${ARTIFACTORY_USERNAME}"  --userconfig ./.npmrc
                npm config set //na.artifactory.swg-devops.com/artifactory/api/npm/mss-npm/:always-auth=true  --userconfig ./.npmrc
                npm install yo @mss/generator-devsecops > /dev/null
                # Workaround: https://github.com/yeoman/yo/issues/348#issuecomment-477856306
                sed -i -e '/rootCheck/d' node_modules/yo/lib/cli.js
                node_modules/yo/lib/cli.js @mss/devsecops --ci
                RV=$?
                cd ..
                rm -rf yo_update
                exit $RV
              '''
            }
          }
        }
      }
    }
  }
}
